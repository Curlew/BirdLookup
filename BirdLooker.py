#!/usr/bin/env python
# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.3 on Sat Dec 13 15:18:49 2008

__author__ = "Martin Jung"
__date__ = "$Date: 2008/12/13 13:37:01 $"
__copyright__ = "Copyright (c) 2008 Martin Jung"

import wx
from db_bn import db_acess
# Import TaskbarIcon
from wx import TaskBarIcon, EVT_TASKBAR_LEFT_DOWN

# begin wxGlade: extracode
# end wxGlade

class BirdLookup(wx.Dialog):
    def __init__(self, *args, **kwds):
        # begin wxGlade: BirdLookup.__init__
        kwds["style"] = wx.CLOSE_BOX
        wx.Dialog.__init__(self, *args, **kwds)
        self.BirdEntry = wx.SearchCtrl(self, 99, "", style=wx.NO_BORDER)
        self.Erase = wx.StaticBitmap(self, 100, wx.Bitmap("clear_left.png",wx.BITMAP_TYPE_ANY))
        
        #Maintaining Database Access
        self.db = db_acess('db_names.db')
        
        #BirdEntry
        self.BirdEntry.SetDescriptiveText('Search Bird')
        self.BirdEntry.ShowSearchButton(False)
        self.BirdEntry.ShowCancelButton(False)
        
        #BUGGY :-)
        #self.Bind(wx.EVT_ICONIZE, self.on_iconify)
        
        #Events
        self.BirdEntry.Bind(wx.EVT_TEXT, self.GiveMenu, id=99)
        self.Erase.Bind(wx.EVT_LEFT_DOWN, self.Eraser, id=100)
        self.Bind(wx.EVT_CLOSE, self.OnClose)
        
        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def OnClose(self, event):
        self.Destroy()

    def on_iconify(self, event):
        #Tray-Icon-Minimize
        if not self.IsIconized():
            self.trayicon = ddTaskBarIcon(self.GetIcon(), "Bird-Lookup", self)
            self.Hide()
    
    def Eraser(self, event):
        self.BirdEntry.Clear()

    def GiveMenu(self, event):
        self.a = wx.Menu()
        self.e = self.BirdEntry.GetValue()
        self.e = self.e.translate('UTF-8')
        db = self.db     
        abk = db.Find(self.e,2,6)
        d = None
        if len(self.e) in (0,1):
            if self.BirdEntry.GetMenu() == None:
                pass
            else:
                self.BirdEntry.SetMenu(None)
                self.BirdEntry.ShowSearchButton(False)
        if self.e.isdigit() and len(self.e) in (3,4,5):
            s = db.Find(self.e,1,7)
            if len(s) == 0:
                self.BirdEntry.SetMenu(None)
                self.BirdEntry.ShowSearchButton(False)
            else:
                for line in s:
                    d = self.EncodVal(line)
                    item = wx.MenuItem(self.a, wx.NewId(), d)
                    self.a.AppendItem(item)
                    self.a.Bind(wx.EVT_MENU, self.GiveValue, item)
                    self.BirdEntry.SetMenu(self.a)
        elif self.e.isdigit() and len(self.e) >5:
            self.BirdEntry.SetMenu(None)
            self.BirdEntry.ShowSearchButton(False)
        elif len(self.e) in (2,3) and abk:
            if len(abk) == 0:
                self.BirdEntry.SetMenu(None)
                self.BirdEntry.ShowSearchButton(False)
            else:
                for line in abk:
                    d = self.EncodVal(line)
                    item = wx.MenuItem(self.a, wx.NewId(), d)
                    self.a.AppendItem(item)
                    self.a.Bind(wx.EVT_MENU, self.GiveValue, item)
                    self.BirdEntry.SetMenu(self.a)
        elif len(self.e) >= 4:
            s = db.Find(self.e,2,3)
            if len(s) == 0:
                self.BirdEntry.SetMenu(None)
                self.BirdEntry.ShowSearchButton(False)
            else:
                for line in s:
                    d = self.EncodVal(line)
                    item = wx.MenuItem(self.a, wx.NewId(), d)
                    self.a.AppendItem(item)
                    self.a.Bind(wx.EVT_MENU, self.GiveValue, item)
                    self.BirdEntry.SetMenu(self.a)
        self.BirdEntry.ShowSearchButton(False)
    
    def EncodVal(self, line):
        u = []
        for i in line[2:-3]:          
            a = i.center(2).encode('UTF-8')
            u.append(a)
        ex = " | ".join(u)
        return ex
    
    def GiveValue(self, event):
        x = self.a.GetLabel(event.GetId())
        x = x.encode('UTF-8')
        #Bug ?
        self.v = x
        self.BirdEntry.ChangeValue(self.v)

    def __set_properties(self):
        # begin wxGlade: BirdLookup.__set_properties
        self.SetTitle("BirdLookup")
        _icon = wx.EmptyIcon()
        _icon.CopyFromBitmap(wx.Bitmap("book.png", wx.BITMAP_TYPE_ANY))
        self.SetIcon(_icon)
        self.SetSize((450, 50))
        self.SetBackgroundColour(wx.Colour(237, 237, 237))
        self.SetToolTipString("Enter something to search")
        self.BirdEntry.SetMinSize((380, 22))
        self.BirdEntry.SetForegroundColour(wx.Colour(0, 0, 0))
        self.BirdEntry.SetFont(wx.Font(10, wx.DEFAULT, wx.NORMAL, 0, 0, ""))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: BirdLookup.__do_layout
        sizer_1 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_1.Add(self.BirdEntry, 0, wx.LEFT|wx.ALIGN_CENTER_VERTICAL, 30)
        sizer_1.Add(self.Erase, 0, wx.LEFT|wx.ALIGN_CENTER_VERTICAL, 3 )
        self.SetSizer(sizer_1)
        self.Layout()
        self.Centre()
        # end wxGlade

# end of class BirdLookup

class ddTaskBarIcon(TaskBarIcon):
    def __init__(self, icon, tooltip, frame):
        TaskBarIcon.__init__(self)
        self.SetIcon(icon, tooltip)
        self.frame = frame
        self.Bind(EVT_TASKBAR_LEFT_DOWN, self.on_left_click)

    def on_left_click(self, event):
        if self.frame.IsIconized():
            print "a"
            self.frame.Show()
            if self.frame.IsShownOnScreen():
                print "b"
            self.Destroy()
        
    def CreatePopupMenu(self):
        return None


if __name__ == "__main__":
    BirdLooker = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    BirdDia = BirdLookup(None, 1, "")
    BirdLooker.SetTopWindow(BirdDia)
    BirdDia.Show()
    BirdLooker.MainLoop()
